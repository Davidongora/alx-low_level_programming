/* All the functions and their respective source files */
int _putchar(char c);  /* _putchar.c */
int _islower(int c);   /* 3-islower.c */
int _isalpha(int c);   /* 4-isalpha.c */
int _abs(int n);       /* 6-abs.c */
int _isupper(int c);   /* 0-isupper.c */
int _isdigit(int c);   /* 1-isdigit.c */
int _strlen(char *s);  /* 2-strlen.c */
void _puts(char *s);   /* 3-puts.c */
char *_strcpy(char *dest, char *src); /* 9-strcpy.c */
int _atoi(char *s);    /* 100-atoi.c */
char *_strcat(char *dest, char *src); /* 0-strcat.c */
char *_strncat(char *dest, char *src, int n); /* 1-strncat.c */
char *_strncpy(char *dest, char *src, int n); /* 2-strncpy.c */
int _strcmp(char *s1, char *s2); /* 3-strcmp.c */
char *_memset(char *s, char b, unsigned int n); /* 0-memset.c */
char *_memcpy(char *dest, char *src, unsigned int n); /* 1-memcpy.c */
char *_strchr(char *s, char c); /* 2-strchr.c */
unsigned int _strspn(char *s, char *accept); /* 3-strspn.c */
char *_strpbrk(char *s, char *accept); /* 4-strpbrk.c */
char *_strstr(char *haystack, char *needle); /* 5-strstr.c */

/* Empty functions with correct prototypes for functions not implemented */
int _putchar(char c) { return 0; }
int _islower(int c) { return 0; }
int _isalpha(int c) { return 0; }
int _abs(int n) { return 0; }
int _isupper(int c) { return 0; }
int _isdigit(int c) { return 0; }
int _strlen(char *s) { return 0; }
void _puts(char *s) { }
char *_strcpy(char *dest, char *src) { return dest; }
int _atoi(char *s) { return 0; }
char *_strcat(char *dest, char *src) { return dest; }
char *_strncat(char *dest, char *src, int n) { return dest; }
char *_strncpy(char *dest, char *src, int n) { return dest; }
int _strcmp(char *s1, char *s2) { return 0; }
char *_memset(char *s, char b, unsigned int n) { return s; }
char *_memcpy(char *dest, char *src, unsigned int n) { return dest; }
char *_strchr(char *s, char c) { return s; }
unsigned int _strspn(char *s, char *accept) { return 0; }
char *_strpbrk(char *s, char *accept) { return s; }
char *_strstr(char *haystack, char *needle) { return haystack; }
